<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition template="../template/application.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:rich="http://richfaces.org/rich"
                xmlns:a4j="http://richfaces.org/a4j">

    <ui:define name="title">
        <h:outputText value="#{messages.getString('roleScreen.title')}"/>
    </ui:define>
    <ui:define name="headerMenu"/>


    <ui:define name="body">

        <f:metadata>
            <f:viewParam name="id" value="#{roleScreen.entity.id}"/>
        </f:metadata>

        <script type="text/javascript">

            function save() {
                refreshOpener();
            }

            function exit() {
                window.close();
            }

            function saveExit() {
                save();
                exit();
            }

            function refreshOpener() {
                var opener = window.opener;
                if (!opener)
                    return;
                var refreshButton = opener.document.getElementById("mainForm:refresh");
                if (refreshButton != null) {
                    refreshButton.click();
                }
            }

            function synchronizeCheckboxes(headerCheckbox, targetSuffix) {
                var elements = getElementsBySuffixId(targetSuffix);
                for (var i = 0; i < elements.length; i++) {
                    elements[i].checked = headerCheckbox.checked;
                }
            }

            function synchronizeCheckboxHeader(targetId, targetSuffix) {
                var checkbox = document.getElementById("mainForm:".concat(targetId));
                checkbox.checked = true;

                var elements = getElementsBySuffixId(targetSuffix);
                for (var i = 0; i < elements.length; i++) {
                    if (!elements[i].checked) {
                        checkbox.checked = false;
                        break;
                    }
                }
            }

            function getElementsBySuffixId(suffix) {
                var elements = [];
                var inputs = document.getElementsByTagName("input");
                for (var i = 0; i < inputs.length; i++) {
                    if (inputs[i].id.indexOf(suffix) > -1) {
                        elements.push(inputs[i]);
                    }
                }
                return elements;
            }


        </script>

        <h:form id="mainForm" onkeypress="if(event.keyCode == 13) return false;">
            <h:outputText style="font-size: 18px; font-weight: bold"
                          value="#{roleScreen.edit ? messages.getString('roleScreen.editText') : messages.getString('roleScreen.addText')}"/>

            <HR/>

            <h:message for="panel" infoClass="info" errorClass="error"/>
            <h:panelGrid id="panel" columns="1">

                <h:panelGroup rendered="#{roleScreen.userPA.idR}">
                    <h:outputLabel value="#{messages.getString('roleEntity.id')}" for="id" styleClass="label"/>
                    <h:inputText id="id" value="#{roleScreen.entity.id}"
                                 styleClass="inputMedium"
                                 disabled="#{roleScreen.isDisabled('id')}"/>
                    <h:message for="id" errorClass="error"/>
                </h:panelGroup>

                <h:panelGroup rendered="#{roleScreen.userPA.nameR}">
                    <h:outputLabel value="#{messages.getString('roleEntity.name')}" for="name"
                                   styleClass="label"/>
                    <h:inputText id="name" value="#{roleScreen.entity.name}"
                                 styleClass="inputMedium"
                                 disabled="#{roleScreen.isDisabled('name')}"/>
                    <h:message for="name" errorClass="error"/>
                </h:panelGroup>

                <h:panelGroup rendered="#{roleScreen.userPA.descriptionR}">
                    <h:outputLabel value="#{messages.getString('roleEntity.description')}" for="description"
                                   styleClass="label"/>
                    <h:inputTextarea id="description" value="#{roleScreen.entity.description}"
                                     styleClass="textareaMedium"
                                     disabled="#{roleScreen.isDisabled('description')}"/>
                    <h:message for="description" errorClass="error"/>
                </h:panelGroup>

            </h:panelGrid>

            <HR/>

            <rich:collapsiblePanel header="#{messages.getString('roleScreen.table.privilege')}" switchType="client"
                                   expanded="false" rendered="#{roleScreen.userPA.privilegesR}">
                <rich:dataTable id="persons" value="#{roleScreen.privilegeRows}" var="row"
                                rowClasses="odd-row, even-row">
                    <rich:column>
                        <f:facet name="header">
                            #{messages.getString('roleScreen.privilege.name')}
                        </f:facet>
                        <h:outputText value="#{row.privilege.name}"/>
                    </rich:column>
                    <rich:column style="text-align: center">
                        <f:facet name="header">
                            #{messages.getString('roleScreen.privilege.read')}
                            <h:selectBooleanCheckbox id="cbReadHeader"
                                                     rendered="#{row.readAvailable}"
                                                     disabled="#{roleScreen.isDisabled('privileges')}"
                                                     onclick="synchronizeCheckboxes(this, 'cbRead')"/>
                        </f:facet>
                        <h:selectBooleanCheckbox id="cbRead"
                                                 value="#{row.readSelected}"
                                                 rendered="#{row.readAvailable}"
                                                 disabled="#{roleScreen.isDisabled('privileges')}"
                                                 onclick="synchronizeCheckboxHeader('cbReadHeader', 'cbRead')"/>
                    </rich:column>
                    <rich:column style="text-align: center">
                        <f:facet name="header">
                            #{messages.getString('roleScreen.privilege.write')}
                            <h:selectBooleanCheckbox id="cbWriteHeader"
                                                     rendered="#{row.readAvailable}"
                                                     disabled="#{roleScreen.isDisabled('privileges')}"
                                                     onclick="synchronizeCheckboxes(this, 'cbWrite')"/>
                        </f:facet>
                        <h:selectBooleanCheckbox id="cbWrite"
                                                 value="#{row.writeSelected}"
                                                 rendered="#{row.writeAvailable}"
                                                 disabled="#{roleScreen.isDisabled('privileges')}"
                                                 onclick="synchronizeCheckboxHeader('cbWriteHeader', 'cbWrite')"/>
                    </rich:column>
                    <rich:column style="text-align: center">
                        <f:facet name="header">
                            #{messages.getString('roleScreen.privilege.edit')}
                            <h:selectBooleanCheckbox id="cbEditHeader"
                                                     rendered="#{row.readAvailable}"
                                                     disabled="#{roleScreen.isDisabled('privileges')}"
                                                     onclick="synchronizeCheckboxes(this, 'cbEdit')"/>
                        </f:facet>
                        <h:selectBooleanCheckbox id="cbEdit"
                                                 value="#{row.editSelected}"
                                                 rendered="#{row.editAvailable}"
                                                 disabled="#{roleScreen.isDisabled('privileges')}"
                                                 onclick="synchronizeCheckboxHeader('cbEditHeader', 'cbEdit')"/>
                    </rich:column>
                    <rich:column style="text-align: center">
                        <f:facet name="header">#{messages.getString('roleScreen.privilege.execute')}</f:facet>
                        <h:selectBooleanCheckbox value="#{row.executeSelected}"
                                                 rendered="#{row.executeAvailable}"
                                                 disabled="#{roleScreen.isDisabled('privileges')}"/>
                    </rich:column>
                </rich:dataTable>
            </rich:collapsiblePanel>

            <HR/>

            <p>
                <a4j:commandButton value="#{messages.getString('button.saveAndExit')}"
                                   action="#{roleScreen.saveAndExit}"
                                   render="mainForm"
                                   styleClass="btn"
                                   rendered="#{roleScreen.edit ? roleScreen.userPA.editR : roleScreen.userPA.addR}"
                                   disabled="#{!(roleScreen.edit ? roleScreen.userPA.editEx : roleScreen.userPA.addEx)}"
                                   oncomplete="saveExit()"/>
                <a4j:commandButton value="#{messages.getString('button.save')}"
                                   action="#{roleScreen.saveOnly}"
                                   render="mainForm"
                                   styleClass="btn"
                                   rendered="#{roleScreen.edit ? roleScreen.userPA.editR : roleScreen.userPA.addR}"
                                   disabled="#{!(roleScreen.edit ? roleScreen.userPA.editEx : roleScreen.userPA.addEx)}"
                                   oncomplete="save()"/>
                <a4j:commandButton value="#{messages.getString('button.delete')}"
                                   action="#{roleScreen.delete}"
                                   styleClass="btn"
                                   rendered="#{roleScreen.edit and roleScreen.userPA.deleteR}"
                                   disabled="#{!roleScreen.edit or !roleScreen.userPA.deleteEx}"
                                   onclick="return confirm('Вы действительно хотите удалить запись?')"
                                   oncomplete="exit()"/>
                <a4j:commandButton value="#{messages.getString('button.cancel')}"
                                   onclick="exit()"
                                   styleClass="btn"/>

            </p>
        </h:form>
    </ui:define>
</ui:composition>
